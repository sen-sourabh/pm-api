{
  "openapi": "3.0.0",
  "paths": {
    "/api/v1/messenger/send-otp": {
      "post": {
        "operationId": "sendOTP",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerificationEmailRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email sent successfully"
          },
          "400": {
            "description": "All fields are required"
          },
          "404": {
            "description": "Email template not found"
          },
          "500": {
            "description": "No such file or directory"
          }
        },
        "tags": [
          "Messenger"
        ]
      }
    },
    "/api/v1/webhooks": {
      "post": {
        "operationId": "handleWebhook",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Webhooks"
        ]
      }
    },
    "/api/v1/roles": {
      "post": {
        "operationId": "createRole",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Roles"
        ]
      },
      "get": {
        "operationId": "findAllRoles",
        "parameters": [
          {
            "name": "id",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_default",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_enabled",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_deleted",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns list of roles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Roles"
        ]
      }
    },
    "/api/v1/roles/{id}": {
      "get": {
        "operationId": "findOneRole",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "return role by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          }
        },
        "tags": [
          "Roles"
        ]
      },
      "patch": {
        "operationId": "updateRole",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Roles"
        ]
      },
      "delete": {
        "operationId": "removeRole",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Roles"
        ]
      }
    },
    "/api/v1/users": {
      "post": {
        "operationId": "createUser",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      },
      "get": {
        "operationId": "findAllUsers",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "operationId": "findOneUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ]
      },
      "patch": {
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "operationId": "removeUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/vault": {
      "get": {
        "operationId": "isServerRunning",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Vault"
        ]
      }
    }
  },
  "info": {
    "title": "Vault-api",
    "description": "Vault - Password manager",
    "version": "1.0",
    "contact": {
      "name": "Vault",
      "url": "Your website link",
      "email": "Your official gmail"
    }
  },
  "tags": [],
  "servers": [
    {
      "url": "http://localhost:4000"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "VerificationEmailRequestDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Name of the receiver",
            "example": "Alan",
            "maxLength": 100,
            "nullable": false
          },
          "email": {
            "description": "Receiver emails seperated by comma",
            "example": [
              "alan@gmail.com",
              "alex@gmail.com"
            ],
            "nullable": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subject": {
            "type": "string",
            "description": "Subject of sending email",
            "example": "Here is the subject",
            "nullable": false
          },
          "purpose": {
            "type": "string",
            "description": "Purpose of email",
            "example": "Account Verification",
            "nullable": false,
            "enum": [
              "Sign Up",
              "Password Reset",
              "Account Verification",
              "Custom"
            ]
          },
          "attachments": {
            "type": "boolean",
            "description": "Set to true, If mail content attachments",
            "example": false,
            "nullable": false
          },
          "expiry_time": {
            "type": "number",
            "description": "Time of expiry of pascode/link (If any included in email)",
            "example": 10,
            "nullable": false
          },
          "expiry_unit": {
            "type": "string",
            "description": "Unit of expiry time of passcode/link ()If any included in email)",
            "example": "minutes",
            "nullable": false,
            "enum": [
              "seconds",
              "minutes",
              "hours",
              "days",
              "weeks",
              "months"
            ]
          }
        },
        "required": [
          "username",
          "email",
          "subject",
          "purpose",
          "attachments",
          "expiry_time",
          "expiry_unit"
        ]
      },
      "WebhookRequestDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "type of webhook request that is built-in",
            "example": "user:created"
          },
          "payload": {
            "type": "object",
            "description": "payload data for webhook"
          }
        }
      },
      "CreateRoleDto": {
        "type": "object",
        "properties": {}
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Id is the unique number identifier",
            "example": 1,
            "nullable": false,
            "uniqueItems": true
          },
          "name": {
            "type": "string",
            "description": "name of the role",
            "example": "Admin"
          },
          "is_default": {
            "type": "boolean",
            "description": "whether role is default or not",
            "example": true
          },
          "is_enabled": {
            "type": "boolean",
            "description": "whether role is enabled or not",
            "example": true
          },
          "is_deleted": {
            "type": "boolean",
            "description": "whether role is deleted or not",
            "example": false
          },
          "created_at": {
            "format": "T",
            "type": "string",
            "description": "With record create it`ll be auto generated",
            "example": "2024-06-01T14:31:42.123Z",
            "nullable": false
          },
          "updated_at": {
            "format": "T",
            "type": "string",
            "description": "With record update it`ll be auto generated",
            "example": "2024-06-01T14:31:42.123Z",
            "nullable": true
          }
        },
        "required": [
          "id",
          "name",
          "is_default",
          "is_enabled",
          "is_deleted",
          "created_at"
        ]
      },
      "UpdateRoleDto": {
        "type": "object",
        "properties": {}
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {}
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id is the unique uuid identifier",
            "example": "e762634c-3e41-11eb-b897-0862660ccbd4",
            "default": "uuid",
            "nullable": false,
            "uniqueItems": true
          },
          "first_name": {
            "type": "string",
            "description": "first name of the user",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "description": "last name of the user",
            "example": "Snow"
          },
          "organization_name": {
            "type": "string",
            "description": "organization name of the user",
            "example": "ABC Inc."
          },
          "organization_position": {
            "type": "string",
            "description": "position in organization of the user",
            "example": "Sr. Manager"
          },
          "no_of_employees": {
            "type": "string",
            "description": "no of empoyees in organization of the user",
            "example": "100"
          },
          "email": {
            "type": "string",
            "description": "unique email of the user",
            "example": "example@gmail.com",
            "uniqueItems": true
          },
          "password": {
            "type": "string",
            "description": "password of the user",
            "example": "Welcome@123"
          },
          "otp": {
            "type": "number",
            "description": "otp of the user",
            "example": 123456
          },
          "secret_key": {
            "type": "string",
            "description": "secret key of the user",
            "example": "d75QBLtPQTRL0x0umobtGqgOWJbKf3yE5U75+bMGK9s="
          },
          "phone_number": {
            "type": "number",
            "description": "phone number of the user",
            "example": 1234567890
          },
          "roles_id": {
            "type": "number",
            "description": "role id of the user",
            "example": 1
          },
          "user_types_id": {
            "type": "number",
            "description": "user type id of the user",
            "example": 1
          },
          "last_login": {
            "format": "T",
            "type": "string",
            "description": "last login datetime of the user",
            "example": "2024-06-01T14:31:42.123Z"
          },
          "is_login": {
            "type": "boolean",
            "description": "whether user logged in or not",
            "example": false
          },
          "is_enabled": {
            "type": "boolean",
            "description": "whether user enabled by admin or not",
            "example": true
          },
          "is_deleted": {
            "type": "boolean",
            "description": "whether user deleted or not",
            "example": false
          },
          "created_at": {
            "format": "T",
            "type": "string",
            "description": "With record create it`ll be auto generated",
            "example": "2024-06-01T14:31:42.123Z",
            "nullable": false
          },
          "updated_at": {
            "format": "T",
            "type": "string",
            "description": "With record update it`ll be auto generated",
            "example": "2024-06-01T14:31:42.123Z"
          }
        },
        "required": [
          "id",
          "email",
          "secret_key",
          "phone_number",
          "roles_id",
          "user_types_id",
          "is_login",
          "is_enabled",
          "is_deleted",
          "created_at",
          "updated_at"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {}
      }
    }
  }
}